"use strict";

const fs = require("fs");
const Helper = require("./helper");
const _ = require("lodash");

function OidentdFile(file) {
	this.file = Helper.expandHome(file);
	this.connectionId = 0;
	this.connections = {};

	this.refresh();
}

OidentdFile.prototype = {
	addSocket: function OidentdFileAddSocket(socket, user) {
		const id = this.connectionId++;

		this.connections[id] = {socket: socket, user: user};
		this.refresh();

		return id;
	},

	removeSocket: function OidentdFileRemoveSocket(id) {
		delete this.connections[id];

		this.refresh();
	},

	refresh: function OidentdFileRefresh() {
		let file = "# Warning: file generated by The Lounge: changes will be overwritten!\n";

		_.forEach(this.connections, (connection) => {
			file += "to " + connection.socket.remoteAddress
				+ " lport " + connection.socket.localPort
				+ " from " + connection.socket.localAddress
				+ " fport " + connection.socket.remotePort
				+ " { reply \"" + connection.user + "\" }\n";
		});

		fs.writeFile(this.file, file, {flag: "w+"}, function(err) {
			if (err) {
				log.error("Failed to update oidentd file!", err);
			}
		});
	},
};

module.exports = OidentdFile;
